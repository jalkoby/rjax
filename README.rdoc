= Rjax

Solve template dispatch on ajax request

{<img src="https://travis-ci.org/jalkoby/rjax.png?branch=master" alt="Build Status" />}[https://travis-ci.org/jalkoby/rjax]
{<img src="https://travis-ci.org/jalkoby/rjax.png?branch=master" alt="Build Status" />}[https://travis-ci.org/jalkoby/rjax]
{<img src="https://badge.fury.io/rb/rjax.png" alt="Gem Version" />}[http://badge.fury.io/rb/rjax]

== Installation

Add this line to your application's Gemfile:

  gem 'rjax'

And then execute:

  $ bundle

Or install it yourself as:

  $ gem install rjax

== Usage

Rjax will be useful if you have a lot action which serve http and ajax request. It might looks like:

  def index
    @users = User.all
    render :partials => 'users', :locals => { :users => @users }  if request.xhr?
    # or
    render :index_ajax if request.xhr?
  end

Rjax replace it with single method call

  def index
    @users = User.all
    rjax
  end
  # render index_rjax template

  def index
    @users = User.all
    rjax @users
  end
  # render _user_rjax or _user partial with variable `user`

  def index
    @users = User.all
    rjax :users => @users, :other => :variable
  end
  # render _users_rjax or _users partial with variables users & other

  def show
    @user = User.find(params[:id])
    rjax @user
  end
  # render _user_rjax or _user partial with `user` variable

The name of partial is based on controller name. If you don't like rjax suffix or it's out your team's convention
feel free to configure wrapper:

  # config/initializers/rjax.rb
  Rjax.config do |config|
    config.suffix = "suffix"
    config.prefix = "prefix"
  end

  prefix_%action_name%_suffix

  _prefix_%partial_name%_suffix

== Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Add some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request
